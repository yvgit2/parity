initSidebarItems({"fn":[["clean","Remove the `\"0x\"`, if present, from the left of `s`, returning the remaining slice."],["log2","Returns log2."]],"macro":[["flush!",""],["flushln!",""],["hash_map!",""],["hash_mapx!",""],["map!",""],["mapx!",""],["sized_binary_map!",""],["x!",""],["xjson!",""],["xx!",""]],"mod":[["bytes","Unified interfaces for bytes operations on basic types"],["common","Utils common types and macros global reexport."],["crypto","Ethcore crypto."],["error","General error types for use in ethcore."],["from_json","Coversion from json."],["hash","General hash types, a fixed-size raw-data type used as the output of hash functions."],["hashdb","Database of byte-slices keyed to their Keccak hash."],["io","General IO module."],["journaldb","`JournalDB` interface and implementation."],["keys","Key management module"],["kvdb","Key-Value store abstraction with `RocksDB` backend."],["log","Common log helper functions"],["memorydb","Reference-counted memory-based `HashDB` implementation."],["misc","Diff misc."],["network","Network and general IO module."],["network_settings","Structure to hold network settings configured from CLI"],["nibbleslice","Nibble-orientated view onto byte-slice, allowing nibble-precision offsets."],["numbers","Utils number types."],["overlaydb","Disk-backed `HashDB` implementation."],["panics","Panic utilities"],["rlp","Rlp serialization module"],["semantic_version","Semantic version formatting and comparing."],["sha3","Wrapper around tiny-keccak crate."],["squeeze","Helper module that should be used to randomly squeeze caches to a given size in bytes"],["standard","Std lib global reexports."],["table","A collection associating pair of keys (row and column) with a single value."],["trie","Trie interface and implementation."],["triehash","Generetes trie root."],["using_queue","Queue-like datastructure including notion of usage."],["vector","Vector extensions."]]});